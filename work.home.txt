4/11/21
[ask@yoga academic-app]$ rails s
=> Booting Puma
=> Rails 6.1.4.1 application starting in development
=> Run `bin/rails server --help` for more startup options
Exiting
/home/ask/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/activesupport-6.1.4.1/lib/active_support/callbacks.rb:707:in `block (2 levels) in skip_callback': Before process_action callback :authenticate_user! has not been defined (ArgumentError)
.
.
.
[ask@yoga config]$ cp routes.rb ~/app.back/ -p
[ask@yoga config]$ cp -rp initializers ~/app.back/


[ask@yoga academic-app]$ git pull
remote: Enumerating objects: 26, done.
remote: Counting objects: 100% (26/26), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 14 (delta 10), reused 14 (delta 10), pack-reused 0
Unpacking objects: 100% (14/14), 4.03 KiB | 206.00 KiB/s, done.
From https://github.com/ahsiraj/academic-app
   97f6ba8..9d7dd3d  master     -> origin/master
Updating 97f6ba8..9d7dd3d
Fast-forward
 app/views/academics/index.html.erb  |   3 ++-
 config/initializers/active_admin.rb |   2 +-
 config/routes.rb                    |  20 ++++++++++++++++--
 db/seeds.rb                         |   5 ++++-
 work.cec.txt                        | 160 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 yarn.lock                           |   2 ++
 6 files changed, 187 insertions(+), 5 deletions(-)
 create mode 100644 work.cec.txt
[ask@yoga academic-app]$

after pull
activeadmin.rb -- see last line  commented out -
#ask 31/10
#config.skip_before_action :authenticate_user

now
[ask@yoga academic-app]$ rails s
is working


After days of struggle to add a new user from admin dashboard finally it worked
here is the  app/admin/users.rb file which caused the trouble,
Instead of encrypted_password use simply use password even though in the table it is encrypted_password.

ActiveAdmin.register User do
  permit_params :name, :email, :role, :password
  index do
    column :name
    column :email
    column :role

    actions
  end
  form do |f|
    f.inputs "User Details" do
      f.inputs :name
      f.inputs :email
      f.inputs :role
      f.inputs :password
    end
    f.actions
  end
end

All user are admin users

5/11/ - An experiment
[ask@yoga academic-app]$ rails generate devise:controllers users
Running via Spring preloader in process 23067
      create  app/controllers/users/confirmations_controller.rb
      create  app/controllers/users/passwords_controller.rb
      create  app/controllers/users/registrations_controller.rb
      create  app/controllers/users/sessions_controller.rb
      create  app/controllers/users/unlocks_controller.rb
      create  app/controllers/users/omniauth_callbacks_controller.rb
===============================================================================

Some setup you must do manually if you haven't yet:

  Ensure you have overridden routes for generated controllers in your routes.rb.
  For example:

    Rails.application.routes.draw do
      devise_for :users, controllers: {
        sessions: 'users/sessions'
      }
    end

===============================================================================
[ask@yoga academic-app]$

6/11/21
[ask@yoga academic-app]$ bundle add cancan
[ask@yoga academic-app]$ rails g cancan:ability
Running via Spring preloader in process 40214
      create  app/models/ability.rb


      When above file is edited admin modification is restricted to role admin


ask@yoga academic-app]$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Gemfile
	modified:   Gemfile.lock
	modified:   app/admin/users.rb
	modified:   app/controllers/application_controller.rb
	modified:   app/models/user.rb
	modified:   config/initializers/active_admin.rb
	modified:   config/routes.rb
	modified:   work.home.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	app/controllers/users/
	app/models/ability.rb


[ask@yoga academic-app]$ git add . -v
add 'Gemfile'
add 'Gemfile.lock'
add 'app/admin/users.rb'
add 'app/controllers/application_controller.rb'
add 'app/models/user.rb'
add 'config/initializers/active_admin.rb'
add 'config/routes.rb'
add 'work.home.txt'
add 'app/controllers/users/confirmations_controller.rb'
add 'app/controllers/users/omniauth_callbacks_controller.rb'
add 'app/controllers/users/passwords_controller.rb'
add 'app/controllers/users/registrations_controller.rb'
add 'app/controllers/users/sessions_controller.rb'
add 'app/controllers/users/unlocks_controller.rb'
add 'app/models/ability.rb'
[ask@yoga academic-app]$ git commit -m "cancan"
[ask@yoga academic-app]$ git push

6/11
[ask@yoga academic-app]$ rails g active_admin:resource TimeSlot
Edited app/admin/time_slots.rb
[ask@yoga academic-app]$ rails g active_admin:resource Timetable
Edited app/admin/timetables.rb

Some more progress
[ask@yoga academic-app]$ git status
	modified:   app/models/timetable.rb
	modified:   work.home.txt
Untracked files:
 	app/admin/time_slots.rb
	app/admin/timetables.rb

ask@yoga academic-app]$ git commit -m "timetable progress"
pushed

[ask@yoga academic-app]$ git push heroku
...
remote: Verifying deploy... done.
To https://git.heroku.com/ask-academic-app.git
   182f5d2..a08d6e0  master -> master

   [ask@yoga academic-app]$ heroku run rails db:migrate
Running rails db:migrate on ⬢ ask-academic-app... done
 ›   Error: Cannot run more than 1 Free size dynos.
 ›
 ›   Error ID: cannot_run_above_limit
 ›   See https://devcenter.heroku.com/articles/dyno-types#default-scaling-limits for more information.
[ask@yoga academic-app]$ heroku run rails db:seed
Running rails db:seed on ⬢ ask-academic-app... done
 ›   Error: Cannot run more than 1 Free size dynos.
 ›
 ›   Error ID: cannot_run_above_limit
 ›   See https://devcenter.heroku.com/articles/dyno-types#default-scaling-limits for more information.
[ask@yoga academic-app]$

7/11
$ rails g migration SubjectColumnChangeTypeToCategory
create    db/migrate/20211107071012_subject_column_change_type_to_category.rb
edited it

[ask@yoga academic-app]$ rails db:migrate
== 20211107071012 SubjectColumnChangeTypeToCategory: migrating ================
-- rename_column(:subjects, :type, :category)
   -> 0.0258s
== 20211107071012 SubjectColumnChangeTypeToCategory: migrated (0.0263s) =======

subjects type seems a keyword, changed to category. Creation okay. editing to change category not working.


15/11/21
Ability.erb file edited to permit Attendance management to faculty
    if user.admin?
      can :manage, :all
    elsif user.faculty?
      can :manage, Attendance
      can :read, :all
    end

    schema modify: attendances
    subject_id chnaged to faculty_subject_id

$ rails g migration AttendanceColumnChangeSubjectIdToFacultySubjectId
    create    db/migrate/20211115082733_attendance_column_change_subject_id_to_faculty_subject_id.rb
edited it
[ask@yoga academic-app]$ rails db:migrate
== 20211115082733 AttendanceColumnChangeSubjectIdToFacultySubjectId: migrating
-- rename_column(:attendances, :subject_id, :faculty_subject_id)
   -> 0.0230s
== 20211115082733 AttendanceColumnChangeSubjectIdToFacultySubjectId: migrated (0.0233s)

list tables from rails c
ApplicationRecord.connection.tables

21/11
rails g migration TimeSlotColumnsTypeChange
rails d migration TimeSlotColumnsTypeChange
rails d model TimeSlot slot:integer from:time to:time

rails db:migrate
irb(main):008:0> ActiveRecord::Migration.drop_table(:time_slots)

rails g model TimeSlot slot:integer from:float to:float
rails db:migrate

22/11
rails g scaffold User name:string email:string encrypted_password:string role:integer --skip-migration --force
Running via Spring preloader in process 109995
      invoke  active_record
       force    app/models/user.rb
      invoke    test_unit
   identical      test/models/user_test.rb
       force      test/fixtures/users.yml
      invoke  resource_route
       route    resources :users
      invoke  inherited_resources_controller
      create    app/controllers/users_controller.rb
      invoke    erb
      create      app/views/users
      create      app/views/users/index.html.erb
      create      app/views/users/edit.html.erb
      create      app/views/users/show.html.erb
      create      app/views/users/new.html.erb
      create      app/views/users/_form.html.erb
      invoke    resource_route
      invoke    test_unit
      create      test/controllers/users_controller_test.rb
      create      test/system/users_test.rb
      invoke    helper
      create      app/helpers/users_helper.rb
      invoke      test_unit
      invoke    jbuilder
      create      app/views/users/index.json.jbuilder
      create      app/views/users/show.json.jbuilder
      create      app/views/users/_user.json.jbuilder
      invoke  assets
      invoke    scss
      create      app/assets/stylesheets/users.scss
      invoke  scss
      create    app/assets/stylesheets/scaffolds.scss
